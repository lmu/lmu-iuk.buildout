[buildout]
# parts = ${buildout:development-parts}

development-parts =
    development-eggs
    development-products
    i18ndude
    i18nduder
#    ploneide
    omelette
    nodejs
    code-analysis
#    eclipse-scripts
#    pydev
    mkrelease
    zopeskel
    test
    xmltestrunner
    coverage
    report
    report-xml
    coverage-report

extensions +=
    mr.developer
    
test-packages += 

#develop +=
#    src/collective.ploneide
#    src/collective.recipe.ploneide

[sources]
#collective.recipe.ploneide = git https://github.com/collective/collective.recipe.ploneide
#collective.ploneide = git https://github.com/collective/collective.ploneide

[development-eggs]
recipe = zc.recipe.egg
eggs =
    plone.reload
    Products.Clouseau

    z3c.checkversions

    teamrubber.theoracle    

    Products.PrintingMailHost

#    archgenxml
#    Products.Zelenium

    collective.autorestart

#    plone.app.themeeditor

zcml = 
    plone.reload
    teamrubber.theoracle
#    plone.app.themeeditor

[development-products]
recipe = plone.recipe.distros
urls = 
nested-packages =
version-suffix-packages = 

[i18ndude]
recipe = zc.recipe.egg:scripts
eggs = i18ndude
scripts = i18ndude

[i18nduder]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
       zettwerk.i18nduder

[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease 

[zopeskel]
# Installs paster and Zopeskel, which can be used to create new packages
# Run: ``bin/zopeskel`` or ``bin/paster create``
unzip = true
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    Paste
    PasteDeploy
    PasteScript
    zopeskel.dexterity
    zopeskel.doctools
#    collective.dexteritypaste
    zopeskel.browserlayer
    ${debug-instance:eggs}
entry-points = paster=paste.script.command:run
       
[ploneide]
#recipe = collective.recipe.ploneide

[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${debug-instance:eggs}
#    ${buildout:directory}/src 
#products = 
#    ${debug-instance:products}
#    ${buildout:directory}/products 
packages = ./
location = ${buildout:directory}/omelette-src

[pydev]
recipe = pb.recipes.pydev
pydevproject_path = ${buildout:directory}/.pydevproject
target_python = python2.7
eggs =
     ${debug-instance:eggs}
     pb.recipes.pydev
     
[eclipse-scripts]
recipe = zc.recipe.egg
eggs = collective.eclipsescripts

[nodejs]
recipe = gp.recipe.node
#url = http://nodejs.org/dist/v0.10.15/node-v0.10.15.tar.gz
version = 0.10.26
npms = 
    less 
    csslint 
    jshint
    coffee-script
scripts = 
    lessc 
    csslint 
    jshint
    coffee

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/
pre-commit-hook = True

flake8 = True
flake8-ignore = 
#flake8-max-complexity = 10
#flake8-max-line-length = 79

jshint = True
jshint-bin = ${buildout:directory}/bin/jshint
#jshint-exclude =

csslint = True
csslint-bin = ${buildout:directory}/bin/csslint
#csslint-ignore =
#csslint-exclude-list =

zptlint = True
#zptlint-bin = ${buildout:directory}/bin/zptlint

#deprecated-methods = True
#utf8-header = True
#clean-lines = True
#prefer-single-quotes = True
#string-formatting = True
#imports = True
#debug-statements = True

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']

eggs =
    ${buildout:test-packages}
    
[xmltestrunner]
recipe = collective.xmltestreport
eggs = ${test:eggs}
defaults = ${test:defaults} + ['--xml']
     
[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all', '--xml']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[report-xml]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report-xml
initialization =
    sys.argv = sys.argv[:] + ['xml', '-i']

# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')
