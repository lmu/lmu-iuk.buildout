[buildout]

############################################
# Test Packages
# ----------
# Specify a list of packages that you wish to explicity include in your test suite.
# Base eggs are automatically included
#
test-packages =
#    plonetheme.sunburst


############################################
# Debug Mode
# ----------
# Most development work is done with Zope/Plone started
# in foreground mode (bin/plonectl fg), which automatically
# turns on debug mode and causes Zope/Plone to stop on
# package loading errors.
#
# Note that debug mode makes Plone run *very* slowly due to
# extra filesystem checks and granular transmission of browser resources.
#
# If you have a need to run in debug mode outside foreground
# operation, turn on debug mode below.
debug-mode = off
#
# If you're developing Plone add-ons, you should want to see
# deprecation warnings that let you know if you're using outmoded
# methods or modules.
deprecation-warnings = on
#
# Turning on verbose security may help diagnose security bugs.
# You'll also need to disable the intercepting of "unauthorized"
# errors in the error_log via the ZMI.
verbose-security = off


############################################
# Less Commonly Changed Options
# -----------------------------
# The remainder of the buildout mainly sets up the development
# environment based on the settings above.

# we're extending buildout.cfg
extends =
    buildout.cfg

extensions +=
    mr.developer

eggs +=
    Products.DocFinderTab
    plone.reload
    plone.app.debugtoolbar
    Paste
    diazo
    collective.upgrade

    ipython
    ipdb
#    Products.PDBDebugMode
    z3c.checkversions



parts +=
    test
    checkversions
    omelette
    diazotools
    zopeskel
    ipzope
    i18ndude
    i18nduder
    instance

[debug-instance]
zserver-threads = 4
locales = ${buildout:directory}/locales


[instance]
<= instance_base
recipe = plone.recipe.zope2instance

http-address = 8080

zserver-threads = 4
locales = ${buildout:directory}/locales


[upgrade]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
scripts = upgrade-portals
arguments = args=[
    '--zope-conf', '${instance:location}/etc/zope.conf',
    '--log-file', '${buildout:directory}/var/log/upgrade.log']

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[checkversions]
# run this via bin/checkversions -l 2 versions.cfg
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']

eggs =
    ${buildout:eggs}
    ${buildout:test-packages}

# Add diazo compile/run tools to bin; useful for debugging understanding
# diazo. See http://docs.diazo.org/en/latest/compiler.html
[diazotools]
recipe = zc.recipe.egg
eggs = diazo

[zopeskel]
# Installs paster and Zopeskel, which can be used to create new packages
# Run: ``bin/zopeskel`` or ``bin/paster create``
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    Paste
    PasteDeploy
    PasteScript
    zopeskel.diazotheme
    zopeskel.dexterity
    zopeskel.doctools
    zopeskel.browserlayer
    zest.releaser
    ${buildout:eggs}

entry-points = paster=paste.script.command:run

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs = ipython
       ${debug-instance:eggs}
initialization =
       import sys, os
       os.environ["INSTANCE_HOME"] = "${debug-instance:location}"
       sys.argv[1:1] = "--profile zope".split()
scripts = 
    ipython=ipzope
    ipython

[i18ndude]
recipe = zc.recipe.egg:scripts
eggs = i18ndude
scripts = i18ndude

[i18nduder]
recipe = zc.recipe.egg
eggs = ${debug-instance:eggs}
       zettwerk.i18nduder

[translation]
recipe = infrae.i18nextract
packages =
    lmu.policy.base
    lmu.policy.serviceportal
    lmu.policy.intranet
    lmu.theme.serviceportal
    lmu.theme.intranet
    lmu.contenttypes.poll
    lmu.contenttypes.blog
#    lmu.contenttypes.pinnwand
#output = ${buildout:directory}/src/myapplication.translation/myapplication/translation/locales
#output-package = myapplication.translations
domain = lmu

############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]
Pillow = 2.9.0
setuptools = 18.3.2
zc.buildout = 2.4.3

buildout.sanitycheck = 1.0.2
MarkupSafe = 0.23
Products.DocFinderTab = 1.0.5
bobtemplates.plone = 0.11
buildout.sanitycheck = 1.0.2
collective.checkdocs = 0.2
collective.recipe.backup = 2.20
mr.bob = 0.1.2
plone.recipe.unifiedinstaller = 4.3.2
zest.pocompile = 1.4